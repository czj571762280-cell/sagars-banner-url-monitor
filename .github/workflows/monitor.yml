name: Detect URL Once and Notify

on:
  schedule:
    - cron: '*/10 * * * *'   # ÊØè10ÂàÜÈíüÊ£ÄÊµã‰∏ÄÊ¨°
  workflow_dispatch:

jobs:
  monitor:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: pip install requests

      - name: Run one-time monitor
        env:
          SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
          SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
          TO_EMAIL: ${{ secrets.TO_EMAIL }}
          TARGET_URLS: |
            https://info.rs.aktsk.jp/static/images/info/130859/
        run: |
          python3 - <<'PY'
          import os, requests, smtplib, ssl
          from email.mime.text import MIMEText
          from email.mime.multipart import MIMEMultipart
          from datetime import datetime

          smtp_server = os.environ['SMTP_SERVER']
          smtp_port = int(os.environ['SMTP_PORT'])
          username = os.environ['SMTP_USERNAME']
          password = os.environ['SMTP_PASSWORD']
          to_email = os.environ['TO_EMAIL']

          urls_raw = os.environ['TARGET_URLS']
          urls = [u.strip() for u in urls_raw.splitlines() if u.strip()]

          context = ssl.create_default_context()
          done_flag = "done.flag"

          if os.path.exists(done_flag):
              print("‚úÖ Ê£ÄÊµãÂ∑≤ÂÆåÊàêÔºàÂ≠òÂú® done.flagÔºâÔºå‰∏çÂÜçÊâßË°å„ÄÇ")
              exit(0)

          forbidden_urls = []

          for url in urls:
              print(f"üîç Ê£ÄÊü•Ôºö{url}")
              try:
                  r = requests.get(url, timeout=30)
                  status = r.status_code
                  print(f"ËøîÂõûÁä∂ÊÄÅÁ†ÅÔºö{status}")
                  if status == 403:
                      print(f"‚ö†Ô∏è Ê£ÄÊµãÂà∞403Ôºö{url}")
                      forbidden_urls.append(url)
                  else:
                      print(f"‚úÖ {url} Ê≠£Â∏∏ÔºàÁä∂ÊÄÅÁ†Å {status}Ôºâ")
              except Exception as e:
                  print(f"‚ùå {url} ËØ∑Ê±ÇÂ§±Ë¥•Ôºö{e}")

          if forbidden_urls:
              msg = MIMEMultipart("alternative")
              msg["Subject"] = "Ê£ÄÊµãÂà∞403Á¶ÅÊ≠¢ËÆøÈóÆ"
              msg["From"] = username
              msg["To"] = to_email
              body = f"Êó∂Èó¥Ôºö{datetime.now()}\n‰ª•‰∏ãÁΩëÂùÄËøîÂõû403 ForbiddenÔºö\n" + "\n".join(forbidden_urls)
              msg.attach(MIMEText(body, "plain"))

              try:
                  if smtp_port == 465:
                      with smtplib.SMTP_SSL(smtp_server, smtp_port, context=context) as server:
                          server.login(username, password)
                          server.sendmail(username, to_email, msg.as_string())
                  else:
                      with smtplib.SMTP(smtp_server, smtp_port) as server:
                          server.starttls(context=context)
                          server.login(username, password)
                          server.sendmail(username, to_email, msg.as_string())
                  print("üìß ÈÇÆ‰ª∂ÂèëÈÄÅÊàêÂäüÔºÅ")
              except Exception as e:
                  print(f"‚ùå ÈÇÆ‰ª∂ÂèëÈÄÅÂ§±Ë¥•Ôºö{e}")

              with open(done_flag, "w") as f:
                  f.write("done")
              print("‚úÖ Â∑≤ÁîüÊàê done.flagÔºå‰∏ãÊ¨°Â∞ÜËá™Âä®ÂÅúÊ≠¢Ê£ÄÊµã„ÄÇ")
          else:
              print("‚è≥ ÊâÄÊúâÁΩëÂùÄÂùáÊú™ËøîÂõû403„ÄÇ")
          PY
