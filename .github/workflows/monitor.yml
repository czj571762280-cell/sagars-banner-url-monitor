name: Monitor Multiple URLs and Send Email

on:
  schedule:
    - cron: '*/30 * * * *'   # 每30分钟执行一次
  workflow_dispatch:

jobs:
  monitor:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: pip install requests

      - name: Run monitor script
        env:
          SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
          SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
          TO_EMAIL: ${{ secrets.TO_EMAIL }}
          # 这里你可以把多个URL放进去，用英文逗号分隔
          TARGET_URLS: "https://dy2q74h86jiwd.cloudfront.net/static/images/info/130850/news_banner_20251015.png,https://dy2q74h86jiwd.cloudfront.net/static/images/info/130850/news_banner_20251017.png"
        run: |
          python3 - <<'PY'
          import smtplib, ssl, requests, hashlib, os
          from email.mime.text import MIMEText
          from email.mime.multipart import MIMEMultipart
          from datetime import datetime

          smtp_server = os.environ['SMTP_SERVER']
          smtp_port = int(os.environ['SMTP_PORT'])
          username = os.environ['SMTP_USERNAME']
          password = os.environ['SMTP_PASSWORD']
          to_email = os.environ['TO_EMAIL']

          # 读取URL列表
          urls = [u.strip() for u in os.environ['TARGET_URLS'].split(",") if u.strip()]
          if not urls:
              print("❌ 没有设置要监控的URL。")
              exit(1)

          changed_urls = []
          context = ssl.create_default_context()

          for url in urls:
              print(f"🔍 检查：{url}")
              hash_file = f"hash_{hashlib.md5(url.encode()).hexdigest()}.txt"
              try:
                  r = requests.get(url, timeout=30)
                  r.raise_for_status()
                  new_hash = hashlib.sha256(r.content).hexdigest()
              except Exception as e:
                  print(f"❌ {url} 请求失败：{e}")
                  continue

              old_hash = None
              if os.path.exists(hash_file):
                  old_hash = open(hash_file).read().strip()

              if old_hash != new_hash:
                  print(f"⚠️ {url} 内容变化！")
                  changed_urls.append(url)
                  with open(hash_file, "w") as f:
                      f.write(new_hash)
              else:
                  print(f"✅ {url} 无变化。")

          if changed_urls:
              print("🔔 检测到有网页发生变化，发送邮件！")
              msg = MIMEMultipart("alternative")
              msg["Subject"] = "网页更新通知"
              msg["From"] = username
              msg["To"] = to_email
              text = f"时间：{datetime.now()}\n以下网址检测到变化：\n\n" + "\n".join(changed_urls)
              msg.attach(MIMEText(text, "plain"))

              try:
                  if smtp_port == 465:
                      with smtplib.SMTP_SSL(smtp_server, smtp_port, context=context) as server:
                          server.login(username, password)
                          server.sendmail(username, to_email, msg.as_string())
                  else:
                      with smtplib.SMTP(smtp_server, smtp_port) as server:
                          server.starttls(context=context)
                          server.login(username, password)
                          server.sendmail(username, to_email, msg.as_string())
                  print("✅ 邮件已发送成功！")
              except Exception as e:
                  print("❌ 邮件发送失败：", e)
          else:
              print(f"{datetime.now()} - 所有网址无变化。")
          PY
